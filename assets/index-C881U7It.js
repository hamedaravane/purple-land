var t=Object.defineProperty,e=(e,s,i)=>((e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i)(e,"symbol"!=typeof s?s+"":s,i);import{r as s,g as i}from"./phaser-CKN4kaq3.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const o=i(s());class r{constructor(t,s,i){e(this,"isPointerDown",!1),e(this,"startPos",null),this.scene=t,this.onTapRelease=s,this.onLineDraw=i}setup(){this.scene.input.on("pointerdown",(t=>{this.isPointerDown=!0,this.startPos={x:t.x,y:t.y}})),this.scene.input.on("pointermove",(t=>{this.isPointerDown&&this.startPos&&this.onLineDraw&&this.onLineDraw(this.startPos,{x:t.x,y:t.y})})),this.scene.input.on("pointerup",(t=>{this.isPointerDown=!1,this.startPos&&(this.onTapRelease({x:t.x,y:t.y}),this.startPos=null)}))}}class n{constructor(){e(this,"bubbles",[])}addBubble(t){this.bubbles.push(t)}getBubbles(){return this.bubbles}removeBubble(t){const e=this.bubbles.findIndex((e=>e.id===t));-1!==e&&this.bubbles.splice(e,1)}clearPoppedBubbles(){this.bubbles=this.bubbles.filter((t=>!t.isPopped))}}class c{detectCollision(t,e,s,i){for(const o of t.getBubbles())if(!o.isPopped&&this.calculateDistance(e,o.position)<=s+i)return o;return null}calculateDistance(t,e){const s=t.x-e.x,i=t.y-e.y;return Math.sqrt(s*s+i*i)}}function h(t,e){return t<=2*e*1.2}class l{popConnectedBubbles(t,e,s){if(e.isPopped)return[];const i=[e],o=new Set,r=e.color;for(;i.length>0;){const e=i.pop();if(!o.has(e)){o.add(e);const n=t.getBubbles().filter((t=>!t.isPopped&&t.color===r));for(const t of n)if(!o.has(t)){const o=e.position.x-t.position.x,r=e.position.y-t.position.y;h(Math.sqrt(o*o+r*r),s)&&i.push(t)}}}for(const n of o)n.pop();return Array.from(o)}}class a{handleDisconnected(t,e){const s=t.getBubbles().filter((t=>!t.isPopped)),i=s.filter((t=>0===t.rowIndex)),o=new Set,r=[...i];for(;r.length>0;){const t=r.pop();if(!o.has(t)){o.add(t);const i=s.filter((t=>!t.isPopped));for(const s of i)if(!o.has(s)){const i=t.position.x-s.position.x,o=t.position.y-s.position.y;h(Math.sqrt(i*i+o*o),e)&&r.push(s)}}}for(const n of s)o.has(n)||n.pop()}}class u{constructor(t,e,s,i=!1,o=0,r=0){this.id=t,this.color=e,this.position=s,this.isPopped=i,this.rowIndex=o,this.colIndex=r}pop(){this.isPopped||(this.isPopped=!0)}updatePosition(t){this.position=t}}class d{arrange(t,e){const{rows:s,cols:i,bubbleRadius:o,colors:r,startX:n=100,startY:c=50}=e,h=o*Math.sqrt(3),l=2*o;let a=0;for(let d=0;d<s;d++)for(let e=0;e<i;e++){const s=n+e*l+(d%2==1?o:0)+o,i=c+d*h+o,p=r[a%r.length],b=new u(`bubble-${a}`,p,{x:s,y:i},!1,d,e);t.addBubble(b),a++}}}class p{constructor(t,e,s,i,o=!0){this.id=t,this.position=e,this.direction=s,this.speed=i,this.isActive=o}updatePosition(t){this.isActive&&(this.position.x+=this.direction.x*this.speed*t,this.position.y+=this.direction.y*this.speed*t)}deactivate(){this.isActive=!1}}class b{constructor(){e(this,"shots",[]),e(this,"shotIdCounter",0)}fireShot(t,e){const s=new p("shot-"+this.shotIdCounter++,{x:t.x,y:t.y},{x:e.x-t.x,y:e.y-t.y},500);return this.shots.push(s),s}updateShots(t){for(const e of this.shots)e.isActive&&e.updatePosition(t);this.shots=this.shots.filter((t=>t.isActive))}deactivateShot(t){const e=this.shots.find((e=>e.id===t));e&&e.deactivate()}getActiveShots(){return this.shots.filter((t=>t.isActive))}}class y{calculateDirection(t,e){const s=e.x-t.x,i=e.y-t.y,o=Math.sqrt(s*s+i*i);return 0===o?{x:0,y:-1}:{x:s/o,y:i/o}}calculateSpeed(t,e){const s=Math.sqrt((e.x-t.x)**2+(e.y-t.y)**2);return Math.min(Math.max(4*s,200),800)}}class f{constructor(t=0){this.value=t}increment(t){this.value+=t}reset(){this.value=0}}class x{constructor(t){this.score=t}applyBubblePoppedScoring(t){let e=1;t>=5&&(e=2),t>=10&&(e=3),this.score.increment(10*t*e)}}class S{constructor(t,e,s,i,o,r,n,c,h){this.shootingService=t,this.collisionService=e,this.clusterPopService=s,this.connectivityService=i,this.bubbleCluster=o,this.scoringService=r,this.trajectoryCalculator=n,this.bubbleRadius=c,this.shotRadius=h}execute(t,e){const s=this.trajectoryCalculator.calculateDirection(t,e),i=this.trajectoryCalculator.calculateSpeed(t,e),o=this.shootingService.fireShot(t,{x:t.x+10*s.x,y:t.y+10*s.y});o.direction=s,o.speed=i;const r=this.collisionService.detectCollision(this.bubbleCluster,o.position,this.shotRadius,this.bubbleRadius);if(r){const t=this.clusterPopService.popConnectedBubbles(this.bubbleCluster,r,this.bubbleRadius);t.length>0&&(this.scoringService.applyBubblePoppedScoring(t.length),this.connectivityService.handleDisconnected(this.bubbleCluster,this.bubbleRadius)),this.shootingService.deactivateShot(o.id)}}}class w extends o.Scene{constructor(){super({key:"MainScene"}),e(this,"bubbleCluster"),e(this,"score"),e(this,"tapShootUseCase"),e(this,"inputSystem"),e(this,"shooterBubble"),e(this,"shooterGraphics"),e(this,"dashedLine")}create(){this.bubbleCluster=new n,(new d).arrange(this.bubbleCluster,{rows:5,cols:8,bubbleRadius:20,colors:["red","blue","green","yellow","purple"]}),this.shooterBubble=new u("shooter","red",{x:400,y:550});const t=new c,e=new l,s=new a,i=new b;this.score=new f;const o=new x(this.score),h=new y;this.tapShootUseCase=new S(i,t,e,s,this.bubbleCluster,o,h,20,10),this.dashedLine=this.add.graphics(),this.inputSystem=new r(this,(t=>{this.dashedLine.clear(),this.tapShootUseCase.execute(this.shooterBubble.position,t)}),((t,e)=>{this.drawDashedLine(t,e)})),this.inputSystem.setup(),this.drawCluster(),this.shooterGraphics=this.add.graphics(),this.drawShooter();const p=this.add.text(10,10,`Score: ${this.score.value}`,{color:"#fff",fontSize:"16px"});this.time.addEvent({delay:300,loop:!0,callback:()=>{p.setText(`Score: ${this.score.value}`)}})}update(){}drawCluster(){const t=this.bubbleCluster.getBubbles();for(const e of t){const t=this.add.graphics();t.lineStyle(2,this.colorToHex(e.color),1),t.strokeCircle(e.position.x,e.position.y,20),t.fillStyle(this.colorToHex(e.color),.3),t.fillCircle(e.position.x,e.position.y,20)}}drawShooter(){this.shooterGraphics.clear(),this.shooterGraphics.fillStyle(this.colorToHex(this.shooterBubble.color),1),this.shooterGraphics.fillCircle(this.shooterBubble.position.x,this.shooterBubble.position.y,20)}drawDashedLine(t,e){this.dashedLine.clear(),this.dashedLine.lineStyle(2,this.colorToHex(this.shooterBubble.color),1);const s=e.x-t.x,i=e.y-t.y,o=Math.sqrt(s*s+i*i),r=Math.atan2(i,s);let n=t.x,c=t.y,h=o;for(this.dashedLine.beginPath();h>0;){const t=Math.min(8,h),e=n+Math.cos(r)*t,s=c+Math.sin(r)*t;this.dashedLine.moveTo(n,c),this.dashedLine.lineTo(e,s),this.dashedLine.strokePath(),n=e+5*Math.cos(r),c=s+5*Math.sin(r),h-=13}this.dashedLine.closePath()}colorToHex(t){switch(t){case"red":return 16711680;case"blue":return 255;case"green":return 65280;case"yellow":return 16776960;case"purple":return 16711935;default:return 16777215}}}class v extends o.Scene{constructor(){super({key:"BootScene"})}preload(){}create(){this.scene.start("MainScene")}}const g={type:o.AUTO,width:600,height:800,scene:[v,w],parent:"game-container",physics:{default:"arcade",arcade:{gravity:{y:0,x:0}}}};window.addEventListener("load",(()=>{new o.Game(g)}));

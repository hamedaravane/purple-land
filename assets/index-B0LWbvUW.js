var e=Object.defineProperty,t=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);import{r as s,g as i}from"./phaser-CKN4kaq3.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();const o=i(s());class n extends o.Scene{constructor(){super({key:"BootScene"})}preload(){}create(){this.scene.start("GameScene")}}class r extends Phaser.GameObjects.Sprite{constructor(e,s,i,o,n="static",r=16777215,c){super(e,s,i,o,c),t(this,"bubbleType"),t(this,"_color"),this.bubbleType=n,this._color=r,e.add.existing(this)}get color(){return this._color}pop(){this.destroy()}shoot(){"shooting"===this.bubbleType&&this.scene.input.on("pointerdown",(()=>{}))}}class c extends o.GameObjects.Graphics{constructor(e,s){super(e),t(this,"scene"),t(this,"fromX"),t(this,"fromY"),t(this,"color"),this.scene=e,this.fromX=s.x,this.fromY=s.y,this.color=s.color,e.add.existing(this),this.scene.input.on("pointerdown",this.onPointerDown,this),this.scene.input.on("pointermove",this.onPointerMove,this),this.scene.input.on("pointerup",this.onPointerUp,this)}onPointerDown(){this.clear()}onPointerMove(e){if(e.isDown){this.clear(),this.lineStyle(2,this.color);const t=10,s=5;this.drawDashedLine(this.fromX,this.fromY,e.x,e.y,t,s);const i=o.Math.Angle.Between(this.fromX,this.fromY,e.x,e.y),n=Math.sqrt(Math.pow(this.scene.scale.width,2)+Math.pow(this.scene.scale.height,2)),r=e.x+Math.cos(i)*n,c=e.y+Math.sin(i)*n;this.drawDashedLine(e.x,e.y,r,c,t,s)}}onPointerUp(){this.clear()}drawDashedLine(e,t,s,i,n,r){const c=o.Math.Distance.Between(e,t,s,i),h=o.Math.Angle.Between(e,t,s,i);let a=c,l=e,d=t;for(;a>0;){const e=Math.min(n,a),t=l+Math.cos(h)*e,s=d+Math.sin(h)*e;this.moveTo(l,d),this.lineTo(t,s),a-=n,l=t+Math.cos(h)*r,d=s+Math.sin(h)*r,a-=r}this.strokePath()}}class h extends o.Scene{constructor(){super({key:"GameScene"}),t(this,"shootingBubble")}create(){this.shootingBubble=new r(this,this.cameras.main.width/2,this.cameras.main.height-100,"","shooting"),new c(this,this.shootingBubble)}}const a={type:o.AUTO,width:600,height:800,scene:[n,h],parent:"game-container",physics:{default:"arcade",arcade:{gravity:{x:NaN,y:0}}}};window.addEventListener("load",(()=>{new o.Game(a)}));

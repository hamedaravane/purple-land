var e=Object.defineProperty,s=(s,t,i)=>((s,t,i)=>t in s?e(s,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[t]=i)(s,"symbol"!=typeof t?t+"":t,i);import{r as t,g as i}from"./phaser-CKN4kaq3.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver((e=>{for(const t of e)if("childList"===t.type)for(const e of t.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&s(e)})).observe(document,{childList:!0,subtree:!0})}function s(e){if(e.ep)return;e.ep=!0;const s=function(e){const s={};return e.integrity&&(s.integrity=e.integrity),e.referrerPolicy&&(s.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?s.credentials="include":"anonymous"===e.crossOrigin?s.credentials="omit":s.credentials="same-origin",s}(e);fetch(e.href,s)}}();const o=i(t());class h extends o.Scene{constructor(){super({key:"BootScene"})}preload(){this.load.image("background","assets/images/background/background.png"),this.load.atlas("bubbles","assets/images/bubbles/bubbles_spritesheet.png","assets/images/bubbles/bubbles_spritesheet.json")}create(){this.scene.start("GameScene")}}class r extends Phaser.GameObjects.Sprite{constructor(e,t,i,o,h="static",r="bubbles",n){super(e,t,i,r,n.label),s(this,"bubbleType"),s(this,"_color"),s(this,"neighbors",[]),s(this,"_diameter"),this.bubbleType=h,this._color=n,this._diameter=o,this.scene.add.existing(this),this.setBubbleSize(),this.initPhysics()}get color(){return this._color}setStatic(){this.bubbleType="static"}pop(){this.destroy()}fall(){this.body instanceof Phaser.Physics.Arcade.Body&&(this.body.enable=!0,this.body.setVelocityY(200))}shot(e,s=600){if("shooting"!==this.bubbleType)return;const t=e.x-this.x,i=e.y-this.y,o=Math.sqrt(t*t+i*i);if(o>0){const e=t/o,h=i/o;this.body.setVelocity(e*s,h*s)}}disablePhysics(){this.body instanceof Phaser.Physics.Arcade.Body&&(this.body.setVelocity(0,0),this.body.enable=!1)}addNeighbor(e){this.neighbors.includes(e)||this.neighbors.push(e)}removeNeighbor(e){const s=this.neighbors.indexOf(e);-1!==s&&this.neighbors.splice(s,1)}setBubbleSize(){const e=this.width,s=this.height;if(e>0&&s>0){const s=this._diameter/e;this.setScale(s)}else this.once(Phaser.Loader.Events.COMPLETE,(()=>{const e=this._diameter/this.width;this.setScale(e)}))}initPhysics(){if(this.scene.physics.add.existing(this),this.body instanceof Phaser.Physics.Arcade.Body){const e=this._diameter/2;this.body.setCollideWorldBounds(!0),this.body.setCircle(e,0,0),this.body.setVelocity(0,0)}}}class n extends Phaser.GameObjects.Container{constructor(e,s,t,i,o,h){const n=2*i,a=i*Math.sqrt(3);super(e,s,t),e.add.existing(this),this.width=a,this.height=n;const c=[{y:0,x:a/2},{y:n/4,x:0},{y:3*n/4,x:0},{y:n,x:a/2},{y:3*n/4,x:a},{y:n/4,x:a}],l=new Phaser.Geom.Polygon(c);this.debugHexagon(e,l);const d=new r(e,this.width/2,this.height/2,a,"static",o,h),b=a/d.width,u=n/d.height,y=Math.min(b,u);d.setScale(y),this.add(d)}debugHexagon(e,s){const t=e.add.graphics({lineStyle:{width:2,color:16776960,alpha:.4}});t.strokePoints(s.points,!0),this.add(t)}}const a=new Map([["orange",16081665],["yellow",16109829],["green",5811254],["cyan",63127],["light-blue",10150133],["purple",9269719],["pink",15626403]]);function c(){const e=Array.from(a.keys()),s=e[Math.floor(Math.random()*e.length)];return{label:s,color:a.get(s)}}class l{constructor(e,t,i,o){s(this,"hexTiles"),s(this,"hexSize"),this.hexSize=e.scale.width/t/2,this.createGrid(e,t,i,o)}createGrid(e,s,t,i){this.hexTiles=new Phaser.GameObjects.Group(e);for(let o=0;o<s;o++)for(let s=0;s<t;s++){const t=s%2==0;if(t&&0===o)continue;const h=t?o*this.hexSize*2-this.hexSize:o*this.hexSize*2,r=s*this.hexSize*Math.sqrt(3),a=c(),l=new n(e,h,r,this.hexSize,i,a);this.hexTiles.add(l)}}}class d extends Phaser.Scene{constructor(){super({key:"GameScene"}),s(this,"shootingBubble"),s(this,"aimer"),s(this,"cols"),s(this,"rows")}create(){this.cols=12,this.rows=6;const e=new Phaser.GameObjects.Sprite(this,0,0,"background");this.shootingBubble=new n(this,this.scale.width/2,this.scale.height-100,this.scale.width/this.cols/2,"bubbles",c()),this.add.existing(e),this.spawnShootingBubble()}spawnShootingBubble(){this.shootingBubble&&this.shootingBubble.destroy(),this.aimer&&this.aimer.destroy(),new l(this,this.cols,this.rows,"bubbles"),this.physics.add.existing(this.shootingBubble)}}const b={type:o.AUTO,width:400,height:900,pixelArt:!1,title:"Purple Land",scene:[h,d],parent:"game-container",scale:{mode:o.Scale.RESIZE,autoCenter:o.Scale.CENTER_BOTH},physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}}};window.addEventListener("load",(()=>{new o.Game(b)}));

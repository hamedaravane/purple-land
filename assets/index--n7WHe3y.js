var t=Object.defineProperty,e=(e,s,i)=>((e,s,i)=>s in e?t(e,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[s]=i)(e,"symbol"!=typeof s?s+"":s,i);import{r as s,g as i}from"./phaser-CKN4kaq3.js";!function(){const t=document.createElement("link").relList;if(!(t&&t.supports&&t.supports("modulepreload"))){for(const t of document.querySelectorAll('link[rel="modulepreload"]'))e(t);new MutationObserver((t=>{for(const s of t)if("childList"===s.type)for(const t of s.addedNodes)"LINK"===t.tagName&&"modulepreload"===t.rel&&e(t)})).observe(document,{childList:!0,subtree:!0})}function e(t){if(t.ep)return;t.ep=!0;const e=function(t){const e={};return t.integrity&&(e.integrity=t.integrity),t.referrerPolicy&&(e.referrerPolicy=t.referrerPolicy),"use-credentials"===t.crossOrigin?e.credentials="include":"anonymous"===t.crossOrigin?e.credentials="omit":e.credentials="same-origin",e}(t);fetch(t.href,e)}}();const n=i(s());class o extends n.Scene{constructor(){super({key:"BootScene"})}preload(){}create(){this.scene.start("GameScene")}}class r extends Phaser.GameObjects.Ellipse{constructor(t,s,i,n,o="static",r=16777215){super(t,s,i,n,n,r,1),e(this,"bubbleType"),e(this,"_color"),this.bubbleType=o,this._color=r,t.add.existing(this),this.enablePhysics()}get color(){return this._color}pop(){this.destroy()}shot(t,e=600){if("shooting"===this.bubbleType){const s=t.x-this.x,i=t.y-this.y,n=Math.sqrt(s**2+i**2);if(n>0){const t=s/n,o=i/n;this.body.setVelocity(t*e,o*e)}}}enablePhysics(){this.scene.physics.add.existing(this),this.body instanceof Phaser.Physics.Arcade.Body&&(this.body.setCollideWorldBounds(!0),this.body.setCircle(this.width/2),this.body.setVelocity(0,0))}disablePhysics(){this.body instanceof Phaser.Physics.Arcade.Body&&(this.body.setVelocity(0,0),this.body.enable=!1)}}class h extends n.GameObjects.Graphics{constructor(t,s){super(t),e(this,"fromX"),e(this,"fromY"),e(this,"color"),e(this,"bubble"),e(this,"targetX",0),e(this,"targetY",0),e(this,"dashLength",10),e(this,"gapLength",5),this.fromX=s.x,this.fromY=s.y,this.color=s.color,this.bubble=s,t.add.existing(this),this.registerInputListeners()}registerInputListeners(){this.scene.input.on("pointerdown",this.onPointerDown,this),this.scene.input.on("pointermove",this.onPointerMove,this),this.scene.input.on("pointerup",this.onPointerUp,this)}onPointerDown(t){this.clear(),this.updateTargetPosition(t),this.drawAimLine(t)}onPointerMove(t){t.isDown&&(this.clear(),this.updateTargetPosition(t),this.drawAimLine(t))}onPointerUp(){this.clear(),this.targetX&&this.targetY&&this.bubble.shot({x:this.targetX,y:this.targetY})}updateTargetPosition(t){this.targetX=t.x,this.targetY=t.y}drawAimLine(t){this.lineStyle(1,this.color),this.drawDashedLine(this.fromX,this.fromY,t.x,t.y);const e=n.Math.Angle.Between(this.fromX,this.fromY,t.x,t.y),s=Math.sqrt(this.scene.scale.width**2+this.scene.scale.height**2),i=t.x+Math.cos(e)*s,o=t.y+Math.sin(e)*s;this.drawDashedLine(t.x,t.y,i,o)}drawDashedLine(t,e,s,i){const o=n.Math.Distance.Between(t,e,s,i),r=n.Math.Angle.Between(t,e,s,i);let h=o,a=t,c=e;for(;h>0;){const t=Math.min(this.dashLength,h),e=a+Math.cos(r)*t,s=c+Math.sin(r)*t;this.moveTo(a,c),this.lineTo(e,s),h-=this.dashLength,a=e+Math.cos(r)*this.gapLength,c=s+Math.sin(r)*this.gapLength,h-=this.gapLength}this.strokePath()}}var a=(t=>(t[t.Red=16080992]="Red",t[t.Orange=16081665]="Orange",t[t.Yellow=16109829]="Yellow",t[t.LightGreen=10606216]="LightGreen",t[t.Green=5811254]="Green",t[t.Cyan=63127]="Cyan",t[t.LightBlue=10150133]="LightBlue",t[t.Purple=9269719]="Purple",t[t.Magenta=11945955]="Magenta",t[t.Pink=15626403]="Pink",t[t.Brown=11169619]="Brown",t))(a||{});function c(){const t=Object.values(a).filter((t=>"number"==typeof t));return t[Math.floor(Math.random()*t.length)]}class l extends Phaser.GameObjects.Group{constructor(t,s,i,n){super(t),e(this,"scene"),this.scene=t,this.createHexGrid(s,i,n)}createHexGrid(t,e,s){for(let i=1;i<e;i++){let e=i%2==1;for(let n=0;e?n<s:n<s-1;n++){let s={x:e?t+n*t*2:2*t+n*t*2,y:i*t*Math.sqrt(3)},o=c();const h=new r(this.scene,s.x,s.y,2*t,"static",o);this.scene.physics.add.existing(h),this.scene.add.existing(h),this.add(h)}}}}class d extends Phaser.Scene{constructor(){super({key:"GameScene"}),e(this,"shootingBubble"),e(this,"staticBubbles")}create(){const t=this.cameras.main.width,e=this.cameras.main.height,s=t/14/2;this.shootingBubble=new r(this,t/2,e-100,2*s,"shooting",c()),new h(this,this.shootingBubble),this.staticBubbles=new l(this,s,9,14),this.add.existing(this.staticBubbles),this.physics.add.collider(this.shootingBubble,this.staticBubbles)}}const u={type:n.AUTO,width:360,height:800,pixelArt:!1,title:"Purple Land",scene:[o,d],parent:"game-container",physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}}};window.addEventListener("load",(()=>{new n.Game(u)}));

var e=Object.defineProperty,t=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);import{r as s,g as i}from"./phaser-sXZmPM0a.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var o=s();const h=i(o);class r extends o.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(t=>{e.width=4+460*t}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("BubbleShooterScene")}}class l extends o.GameObjects.Container{constructor(e,s,i,o){super(e,o*(1.5*s),o*(Math.sqrt(3)*(i+s/2))),t(this,"q"),t(this,"r"),t(this,"bubble",null),t(this,"neighbors",[]),this.q=s,this.r=i,this.scene.add.existing(this)}isOccupied(){return null!==this.bubble}placeBubble(e){this.bubble=e,e.setTile(this),this.add(e)}removeBubble(){this.bubble&&(this.remove(this.bubble),this.bubble.destroy(),this.bubble=null)}setNeighbors(e){this.neighbors=e}}var n=(e=>(e.Idle="IDLE",e.Moving="MOVING",e.Bursting="BURSTING",e.Frozen="FROZEN",e))(n||{});class a extends o.Physics.Arcade.Sprite{constructor(e,s,i,o,h,r,l="NORMAL"){super(e,s,i,o,h),t(this,"_color"),t(this,"_type"),t(this,"_tile",null),t(this,"_state","IDLE"),this._color=r,this._type=l,e.add.existing(this),e.physics.add.existing(this),this.setInteractive(),this.setOrigin(.5,.5),this.setCircle(this.width/2)}get color(){return this._color}get bubbleType(){return this._type}get tile(){return this._tile}get bubbleState(){return this._state}setBubbleState(e){this._state=e,"BURSTING"===e&&this.burst()}setTile(e){this._tile=e}burst(){this.scene.tweens.add({targets:this,scaleX:0,scaleY:0,duration:200,onComplete:()=>{this.destroy()}})}}class d extends o.GameObjects.Graphics{constructor(e,s,i){super(e,{x:s,y:i}),t(this,"startX"),t(this,"startY"),t(this,"endX"),t(this,"endY"),t(this,"isAiming",!1),this.startX=s,this.startY=i,this.endX=s,this.endY=i,e.add.existing(this)}startAiming(e){this.isAiming=!0,this.updateAim(e)}updateAim(e){this.isAiming&&(this.endX=e.x,this.endY=e.y,this.drawAim())}endAiming(){return this.isAiming=!1,this.clear(),{dx:this.endX-this.startX,dy:this.endY-this.startY}}drawAim(){this.clear(),this.lineStyle(4,16777215,1),this.beginPath(),this.moveTo(this.startX,this.startY),this.lineTo(this.endX,this.endY),this.strokePath()}}class c extends h.Scene{constructor(){super({key:"BubbleShooterScene"}),t(this,"tiles",[]),t(this,"numRows",7),t(this,"numCols",8),t(this,"tileSize",32),t(this,"hexHeight"),t(this,"hexWidth"),t(this,"bubbleGroup"),t(this,"aimer"),t(this,"shooterBubble"),t(this,"score",0),t(this,"level",1),t(this,"scoreText"),t(this,"levelText"),t(this,"popSound"),t(this,"shootSound"),t(this,"isShooting",!1),t(this,"handleCollision",((e,t)=>{const s=e;s.setVelocity(0,0),s.body.setImmovable(!0),s.body.moves=!1;const i=this.findNearestTile(s.x,s.y);i&&!i.isOccupied()&&(i.placeBubble(s),this.bubbleGroup.add(s),this.isShooting=!1,this.physics.world.off("worldbounds",this.handleWorldBounds,this),this.checkForMatches(s),this.descendGrid(),this.checkGameOver(),this.createShooterBubble(),this.createAimer())})),t(this,"handleWorldBounds",((e,t,s,i,o)=>{e.gameObject===this.shooterBubble&&(e.gameObject.destroy(),this.isShooting=!1,this.createShooterBubble(),this.createAimer())})),this.hexHeight=this.tileSize*Math.sqrt(3),this.hexWidth=1.5*this.tileSize}preload(){this.load.spritesheet("bubbles","assets/images/bubbles.png",{frameWidth:2*this.tileSize,frameHeight:this.hexHeight}),this.load.audio("pop","assets/audio/pop.wav"),this.load.audio("shoot","assets/audio/shoot.wav")}create(){this.createAudio(),this.createUI(),this.createTiles(),this.createInitialBubbles(),this.createShooterBubble(),this.createAimer(),this.setupInput()}update(e,t){}createAudio(){this.popSound=this.sound.add("pop"),this.shootSound=this.sound.add("shoot")}createUI(){this.scoreText=this.add.text(10,10,`Score: ${this.score}`,{fontSize:"24px",color:"#ffffff"}),this.levelText=this.add.text(10,40,`Level: ${this.level}`,{fontSize:"24px",color:"#ffffff"})}createTiles(){this.bubbleGroup=this.physics.add.staticGroup();for(let e=0;e<this.numRows;e++){this.tiles[e]=[];for(let t=0;t<this.numCols;t++)this.tiles[e][t]=new l(this,t,e,this.tileSize)}this.setTileNeighbors()}setTileNeighbors(){const e=[{dq:1,dr:0},{dq:1,dr:-1},{dq:0,dr:-1},{dq:-1,dr:0},{dq:-1,dr:1},{dq:0,dr:1}];for(let t=0;t<this.numRows;t++)for(let s=0;s<this.numCols;s++){const i=this.tiles[t][s],o=[];e.forEach((e=>{const i=s+e.dq,h=t+e.dr;this.isValidTile(i,h)&&o.push(this.tiles[h][i])})),i.setNeighbors(o)}}isValidTile(e,t){return e>=0&&e<this.numCols&&t>=0&&t<this.numRows}createInitialBubbles(){for(let e=0;e<2;e++)for(let t=0;t<this.numCols;t++){const s=this.tiles[e][t];if(h.Math.Between(0,1)){const e=h.Math.Between(0,4),t=new a(this,s.x,s.y,"bubbles",e,e);this.bubbleGroup.add(t),s.placeBubble(t)}}}createShooterBubble(){const e=this.scale.width/2,t=this.scale.height-100,s=h.Math.Between(0,4);this.shooterBubble=new a(this,e,t,"bubbles",s,s),this.shooterBubble.setDepth(1),this.physics.add.existing(this.shooterBubble),this.shooterBubble.setImmovable(!0),this.shooterBubble.setGravityY(0)}createAimer(){const e=this.shooterBubble.x,t=this.shooterBubble.y;this.aimer=new d(this,e,t)}setupInput(){this.input.on("pointerdown",(e=>{this.aimer.startAiming(e)})),this.input.on("pointermove",(e=>{this.aimer.updateAim(e)})),this.input.on("pointerup",(e=>{const t=this.aimer.endAiming();t&&!this.isShooting&&this.shootBubble(t.dx,t.dy)}))}shootBubble(e,t){var s;if(!this.shooterBubble)return;this.isShooting=!0,this.shootSound.play();const i=Math.sqrt(e*e+t*t),o=e/i*800,h=t/i*800;null==(s=this.shooterBubble.body)||s.setImmovable(!1),this.shooterBubble.body.setAllowGravity(!0),this.shooterBubble.body.setVelocity(o,h),this.physics.add.collider(this.shooterBubble,this.bubbleGroup,this.handleCollision,void 0,this),this.shooterBubble.setCollideWorldBounds(!0),this.shooterBubble.setBounce(1,1),this.shooterBubble.body.onWorldBounds=!0,this.physics.world.on("worldbounds",this.handleWorldBounds,this)}findNearestTile(e,t){let s=null,i=1/0;return this.tiles.forEach((o=>{o.forEach((o=>{const r=h.Math.Distance.Between(e,t,o.x,o.y);r<i&&(i=r,s=o)}))})),s}checkForMatches(e){const t=e.color,s=e.r,i=e.q,o=[],h=new Set,r=[{row:s,col:i}];for(;r.length>0;){const e=r.pop(),s=`${e.row},${e.col}`;if(h.has(s))continue;h.add(s);const i=this.tiles[e.row][e.col],l=i.bubble;l&&l.color===t&&(o.push(l),i.neighbors.forEach((e=>{e.bubble&&e.bubble.color===t&&r.push({row:e.r,col:e.q})})))}o.length>=3&&(o.forEach((e=>{this.popSound.play(),e.setState(n.Bursting),this.score+=10})),this.scoreText.setText(`Score: ${this.score}`))}descendGrid(){for(let e=this.numRows-1;e>=0;e--)for(let t=0;t<this.numCols;t++){const s=this.tiles[e][t];if(s.bubble){const i=e+1;if(i<this.numRows){const e=this.tiles[i][t];e.isOccupied()||(e.placeBubble(s.bubble),s.removeBubble())}else s.removeBubble()}}}checkGameOver(){for(let e=0;e<this.numCols;e++)if(this.tiles[this.numRows-1][e].isOccupied())return void this.handleGameOver();this.areAllBubblesCleared()&&this.proceedToNextLevel()}handleGameOver(){this.scene.restart({gameOver:!0,finalScore:this.score})}areAllBubblesCleared(){for(let e=0;e<this.numRows;e++)for(let t=0;t<this.numCols;t++)if(this.tiles[e][t].isOccupied())return!1;return!0}proceedToNextLevel(){this.level++,this.levelText.setText(`Level: ${this.level}`),this.numRows=Math.min(this.numRows+1,12),this.resetGrid(),this.createTiles(),this.createInitialBubbles()}resetGrid(){this.tiles.forEach((e=>{e.forEach((e=>{e.removeBubble()}))}))}}const u={type:Phaser.AUTO,width:600,height:800,parent:"game-container",backgroundColor:"transparent",scale:{mode:Phaser.Scale.EXPAND,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[r,c],physics:{default:"arcade",arcade:{gravity:{x:0,y:0}}}};new o.Game(u);

var e=Object.defineProperty,t=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);import{r as s}from"./phaser-DHTQYdsl.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver((e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)})).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var i=s();class o extends i.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",(t=>{e.width=4+460*t}))}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("BubbleShooterScene")}}class r extends i.Scene{constructor(){super({key:"BubbleShooterScene"}),t(this,"grid",[]),t(this,"numRows",10),t(this,"numCols",12),t(this,"bubbleSize",64),t(this,"bubbleColors",5),t(this,"descendInterval",1),t(this,"score",0),t(this,"level",1),t(this,"bubbleGroup"),t(this,"shooterBubble"),t(this,"scoreText"),t(this,"levelText"),t(this,"popSound"),t(this,"shootSound"),t(this,"initialPointerPos"),t(this,"finalPointerPos"),t(this,"handleBubbleCollision",((e,t)=>{var s;const i=e;i.setVelocity(0,0),i.setImmovable(!0),i.body.immovable=!0;const{x:o,y:r,row:l,col:h}=this.getNearestGridPosition(i.x,i.y);i.setPosition(o,r),i.setData("row",l),i.setData("col",h),null==(s=this.bubbleGroup)||s.add(i),this.grid[l][h]=i,this.checkForMatches(i),this.createShooterBubble(),this.descendRows(),this.checkGameOver()}))}preload(){this.load.spritesheet("bubbles","/assets/images/bubbles.png",{frameWidth:64,frameHeight:64,margin:4,spacing:4}),this.load.audio("pop","/assets/audio/pop.wav"),this.load.audio("shoot","/assets/audio/shoot.wav")}create(){this.createAudio(),this.createUI(),this.createInitialBubbles(),this.createShooterBubble(),this.setupInput()}update(){}createAudio(){this.popSound=this.sound.add("pop"),this.shootSound=this.sound.add("shoot")}createUI(){this.scoreText=this.add.text(10,10,`Score: ${this.score}`,{fontSize:"24px",color:"#ffffff"}).setDepth(10),this.levelText=this.add.text(10,40,`Level: ${this.level}`,{fontSize:"24px",color:"#ffffff"}).setDepth(10)}setupInput(){this.input.on("pointerdown",(e=>{this.initialPointerPos={x:e.x,y:e.y}})),this.input.on("pointerup",(e=>{this.finalPointerPos={x:e.x,y:e.y},this.shootBubble()}))}createInitialBubbles(){this.bubbleGroup=this.physics.add.staticGroup();for(let e=0;e<this.numRows;e++){this.grid[e]=[];for(let t=0;t<this.numCols;t++){const s=i.Math.Between(0,this.bubbleColors-1),o=t*this.bubbleSize+this.bubbleSize/2,r=e*this.bubbleSize+this.bubbleSize/2+50,l=this.bubbleGroup.create(o,r,"bubbles",s);l.setData("color",s),l.setData("row",e),l.setData("col",t),l.setCircle(this.bubbleSize/2),this.grid[e][t]=l}}}createShooterBubble(){this.shooterBubble&&this.shooterBubble.destroy();const e=i.Math.Between(0,this.bubbleColors-1),t=this.scale.width/2,s=this.scale.height-100;this.shooterBubble=this.physics.add.sprite(t,s,"bubbles",e),this.shooterBubble.setData("color",e),this.shooterBubble.setCircle(this.bubbleSize/2),this.shooterBubble.setDepth(5)}shootBubble(){var e;if(!this.shooterBubble||!this.bubbleGroup)return;if(!this.initialPointerPos||!this.finalPointerPos)return;const t=this.finalPointerPos.x-this.initialPointerPos.x,s=this.finalPointerPos.y-this.initialPointerPos.y;if(0===t&&0===s)return;null==(e=this.shootSound)||e.play();const i=Math.sqrt(t*t+s*s),o=t/i*800,r=s/i*800;this.shooterBubble.setVelocity(o,r),this.physics.add.collider(this.shooterBubble,this.bubbleGroup,(()=>this.handleBubbleCollision),void 0,this)}getNearestGridPosition(e,t){let s=Math.round((e-this.bubbleSize/2)/this.bubbleSize),o=Math.round((t-this.bubbleSize/2-50)/this.bubbleSize);return s=i.Math.Clamp(s,0,this.numCols-1),o=i.Math.Clamp(o,0,this.numRows-1),{x:s*this.bubbleSize+this.bubbleSize/2,y:o*this.bubbleSize+this.bubbleSize/2+50,row:o,col:s}}checkForMatches(e){const t=e.getData("color"),s=e.getData("row"),i=e.getData("col"),o=[{row:s,col:i}],r=new Set([`${s},${i}`]),l=[];for(;o.length>0;){const{row:e,col:s}=o.pop(),i=this.grid[e][s];if(i&&i.getData("color")===t){l.push(i);const t=[{r:e-1,c:s},{r:e+1,c:s},{r:e,c:s-1},{r:e,c:s+1}];for(const e of t){const t=`${e.r},${e.c}`;e.r>=0&&e.r<this.numRows&&e.c>=0&&e.c<this.numCols&&!r.has(t)&&null!=this.grid[e.r][e.c]&&(o.push({row:e.r,col:e.c}),r.add(t))}}}l.length>=3&&this.popBubbles(l)}popBubbles(e){var t,s;null==(t=this.popSound)||t.play(),e.forEach((e=>{const t=e.getData("row"),s=e.getData("col");this.tweens.add({targets:e,scaleX:0,scaleY:0,duration:200,onComplete:()=>{this.grid[t][s]=null,e.destroy()}})})),this.score+=10*e.length,null==(s=this.scoreText)||s.setText(`Score: ${this.score}`)}descendRows(){for(let e=this.numRows-1;e>=0;e--)for(let t=0;t<this.numCols;t++){const s=this.grid[e][t];if(!s)continue;const i=e+this.descendInterval;i<this.numRows?(this.grid[i][t]=s,this.grid[e][t]=null,s.setData("row",i),s.setData("col",t),this.tweens.add({targets:s,y:i*this.bubbleSize+this.bubbleSize/2+50,duration:300})):(s.destroy(),this.grid[e][t]=null)}}checkGameOver(){for(let e=0;e<this.numCols;e++)if(this.grid[this.numRows-1][e])return void this.handleGameOver();this.isGridEmpty()&&this.nextLevel()}handleGameOver(){this.scene.restart({gameOver:!0,finalScore:this.score})}isGridEmpty(){for(let e=0;e<this.numRows;e++)for(let t=0;t<this.numCols;t++)if(this.grid[e][t])return!1;return!0}nextLevel(){var e;this.level++,null==(e=this.levelText)||e.setText(`Level: ${this.level}`),this.descendInterval=Math.min(this.descendInterval+1,3),this.numRows=Math.min(this.numRows+1,12),this.resetGrid(),this.createInitialBubbles()}resetGrid(){var e;for(let t=0;t<this.grid.length;t++)for(let e=0;e<this.grid[t].length;e++){const s=this.grid[t][e];null==s||s.destroy(),this.grid[t][e]=null}this.grid=[],null==(e=this.bubbleGroup)||e.clear(!0,!0)}}const l={type:Phaser.AUTO,width:600,height:800,parent:"game-container",backgroundColor:"transparent",scale:{mode:Phaser.Scale.EXPAND,autoCenter:Phaser.Scale.CENTER_BOTH},scene:[o,r],physics:{default:"arcade",arcade:{gravity:{x:0,y:0}}}};new i.Game(l);
